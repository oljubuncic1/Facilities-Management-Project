package com.oljubuncic1.entities;

// Generated 03-Mar-2015 23:19:13 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name = "category")
public class Category implements java.io.Serializable {

	private int id;
	private Category parentCategory;
	private String name;
	private Set<Facility> facilities = new HashSet<Facility>(0);
	private Set<Category> childCategories = new HashSet<Category>(0);

	public Category() {
	}

	public Category(int id, String name) {
		this.id = id;
		
		this.name = name;
	}

	public Category(int id, Category parentCategory, String name,
			Set<Facility> facilities, Set<Category> childCategories) {
		this.id = id;
		this.parentCategory = parentCategory;
		this.name = name;
		this.facilities = facilities;
		this.childCategories = childCategories;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.SEQUENCE)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_category_id", nullable = true)
	public Category getParentCategory() {
		return this.parentCategory;
	}

	public void setParentCategory(Category parentCategory) {
		this.parentCategory = parentCategory;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "categories")
	public Set<Facility> getfacilities() {
		return this.facilities;
	}

	public void setFacilities(Set<Facility> facilities) {
		this.facilities = facilities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "parentCategory")
	public Set<Category> getChildCategories() {
		return this.childCategories;
	}

	public void setChildCategories(Set<Category> childCategories) {
		this.childCategories = childCategories;
	}

}
