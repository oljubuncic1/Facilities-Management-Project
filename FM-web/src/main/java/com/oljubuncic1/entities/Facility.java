package com.oljubuncic1.entities;

// Generated 03-Mar-2015 23:19:13 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Facility generated by hbm2java
 */
@Entity
@Table(name = "facility")
public class Facility implements java.io.Serializable {

	private int id;
	private String name;
	private String description;
	private String website;
	private Set<Category> categories = new HashSet<Category>(0);
	private Set<Phone> phones = new HashSet<Phone>(0);
	private Set<Email> emails = new HashSet<Email>(0);
	private Set<Address> addresses = new HashSet<Address>(0);

	public Facility() {
	}

	public Facility(int id, String name, String description, String website) {
		this.id = id;
		this.name = name;
		this.description = description;
		this.website = website;
	}

	public Facility(int id, String name, String description, String website,
			Set<Category> categories, Set<Phone> phones, Set<Email> emails,
			Set<Address> addresses) {
		this.id = id;
		this.name = name;
		this.description = description;
		this.website = website;
		this.categories = categories;
		this.phones = phones;
		this.emails = emails;
		this.addresses = addresses;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.AUTO)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", nullable = false)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "website", nullable = false)
	public String getWebsite() {
		return this.website;
	}

	public void setWebsite(String website) {
		this.website = website;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name="facility_category", joinColumns = { 
			@JoinColumn(name = "facility_id", referencedColumnName="id", nullable = false, updatable = false) }, 
			inverseJoinColumns = { @JoinColumn(name = "category_id", referencedColumnName="id", 
					nullable = false, updatable = false) })
    public Set<Category> getCategories() {
		return this.categories;
	}

	public void setCategories(Set<Category> categories) {
		this.categories = categories;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "facility")
	public Set<Phone> getPhones() {
		return this.phones;
	}

	public void setPhones(Set<Phone> phones) {
		this.phones = phones;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "facility")
	public Set<Email> getEmails() {
		return this.emails;
	}

	public void setEmails(Set<Email> emails) {
		this.emails = emails;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name="facility_address", joinColumns = { 
			@JoinColumn(name = "facility_id", referencedColumnName="id", nullable = false, updatable = false) }, 
			inverseJoinColumns = { @JoinColumn(name = "address_id", referencedColumnName="id", 
					nullable = false, updatable = false) })
	public Set<Address> getAddresses() {
		return this.addresses;
	}

	public void setAddresses(Set<Address> addresses) {
		this.addresses = addresses;
	}

}
